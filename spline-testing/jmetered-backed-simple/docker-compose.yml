---
version: '3'
services:
  arangodb:
    image: arangodb:${ARANGO_DB_VERSION}
    restart: on-failure
    ports:
      - ${ARANGO_DB_PORT}:8529
    network_mode: "bridge"
    environment:
      ARANGO_NO_AUTH: 1

  spline:
    build:
      context: ./spline/rest-gateway
      args:
        PROJECT_BUILD_FINAL_NAME: spline-rest-server-${SPLINE_CORE_VERSION}
    image: testing-spline-rest-server:${SPLINE_CORE_VERSION} # locally built and used
    restart: on-failure
    ports:
      - ${SPLINE_REST_PORT}:8080
    network_mode: "bridge"
    command: >
      bash -c "
        until curl --output /dev/null --silent --get --fail http://172.17.0.1:${ARANGO_DB_PORT}/_db/spline/_admin/server/availability
        do
          echo waiting for 'spline' database to be ready at 172.17.0.1:${ARANGO_DB_PORT}
          sleep 5
        done
        catalina.sh run
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://172.17.0.1:${SPLINE_REST_PORT}"]
      interval: 10s
      timeout: 20s
      retries: 20
    environment:
      SPLINE_DATABASE_CONNECTION_URL: 'arangodb://172.17.0.1:${ARANGO_DB_PORT}/spline'
      # by default /dev/random is used which may block
      CATALINA_OPTS: "-Dsecurerandom.source=file:/dev/./urandom -Djava.security.egd=file:/dev/./urandom"
    links:
      - arangodb

  spline-init-db:
    build:
      context: ./spline/admin
      args:
        PROJECT_BUILD_FINAL_NAME: admin-${SPLINE_CORE_VERSION}
        IMAGE_NAME: spline-admin
    image: testing-spline-db-admin:${SPLINE_CORE_VERSION} # locally built and used
    restart: on-failure
    network_mode: "bridge"
    entrypoint: >
      tini -g -- bash -c "
        until curl --output /dev/null --silent --get --fail http://172.17.0.1:${ARANGO_DB_PORT}/_admin/server/availability
        do
          echo waiting for ArangoDB server to be ready to run spline-admin:${SPLINE_CORE_VERSION} to init the spline DB
          sleep 5
        done
        bash ./entrypoint.sh db-init arangodb://172.17.0.1:${ARANGO_DB_PORT}/spline -s && sleep infinity
      "
    # ^ Waiting for jmeter image to finish first with measurements, teardown only after that
    links:
      - arangodb

  jmeter:
    image: justb4/jmeter:${JMETER_VERSION}
    network_mode: "bridge"
    command: >
      -n -t /var/jmeter/lineage-multi.jmx -l /var/jmeter/res.txt -J"config_file=/var/jmeter/triangle-lineage-5reads-3-10@10ops-4attr.json.txt" -Jspline_base=http://172.17.0.1:${SPLINE_REST_PORT}
    volumes:
      - .:/var/jmeter
    links:
      - spline
    depends_on:
      spline:
        condition: service_healthy

  ui:
    image: absaoss/spline-web-ui:${SPLINE_UI_VERSION}
    restart: on-failure
    environment:
      # The consumer URL is used by the web browser
      SPLINE_CONSUMER_URL: 'http://${DOCKER_HOST_EXTERNAL:-localhost}:${SPLINE_REST_PORT}/consumer'
      # by default /dev/random is used which may block
      CATALINA_OPTS: "-Dsecurerandom.source=file:/dev/./urandom -Djava.security.egd=file:/dev/./urandom"
    ports:
      - ${SPLINE_UI_PORT}:8080
    links:
      - spline

